name: production deploy of cog
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  Deploy:
    name: Production Deploy of Cog
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && (contains(github.event.pull_request.labels.*.name, 'deploy-cog') || github.event_name == 'workflow_dispatch')
    steps:
      - name: checkout repo
        uses: actions/checkout@v2.3.4

      - name: set up node 16 with yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Run Prisma migrate
        run: yarn --cwd packages/redditat-database db:pushprod
        env:
          SUPABASE_PSQL_URI: ${{ secrets.SUPABASE_PSQL_URI }}

      - # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: 🐋 set up Docker buildx to allow layer caching
        uses: docker/setup-buildx-action@v1

      - name: 🔁 restore GitHub runner cache at /tmp/.buildx-cache

        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🏗️ build and push cog-api to registry.yungstentech.com
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: apps/cog/api.Dockerfile
          tags: registry.yungstentech.com/cog-api:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: 🏗️ build and push cog-workers to registry.yungstentech.com
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: apps/cog/workers.Dockerfile
          tags: registry.yungstentech.com/cog-workers:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: 🧹 move the newly cached image layers to the /tmp/buildx-cache directory
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: 🚀 SSH into the dedicated host and bring up the docker compose stack
        uses: appleboy/ssh-action@master
        env:
          DOT_ENV_FILE: ${{ secrets.DOT_ENV_FILE }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEDI_DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_HOST_SSH_KEY }}
          envs: DOT_ENV_FILE
          script: |
            rm -rf cog-deploy && mkdir cog-deploy && cd cog-deploy
            git clone git@github.com-cog:paulmikulskis/redditat.git
            echo "hydrating .env"
            cd redditat && echo "$DOT_ENV_FILE" > .env
            docker compose down -v
            docker image rm --force registry.yungstentech.com/cog-api:latest
            docker image rm --force registry.yungstentech.com/cog-workers:latest
            make cog-prod
