datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_PSQL_URI")
}

generator client {
  provider = "prisma-client-js"
}

model RedditComment {
  id                            String           @id() @unique()
  approved                      Boolean          @default(false)
  body_html                     String
  body                          String
  collapsed_reason              String?
  collapsed                     Boolean          @default(false)
  controversiality              Int?
  depth                         Int?
  ignore_reports                Boolean          @default(false)
  is_submitter                  Boolean          @default(false)
  link_id                       String?
  parent_id                     String?
  removed                       Boolean          @default(false)
  score_hidden                  Boolean          @default(false)
  spam                          Boolean          @default(false)
  archived                      Boolean          @default(false)
  author                        RedditUser       @relation(fields: [redditUserId], references: [id])
  author_flair_background_color String?
  author_flair_css_class        String?
  author_flair_template_id      String?
  author_flair_text             String?
  author_flair_text_color       String?
  author_flair_type             String?
  author_fullname               String?
  author_patreon_flair          Boolean          @default(false)
  can_gild                      Boolean          @default(false)
  can_mod_post                  Boolean          @default(true)
  distinguished                 String?
  downs                         Int
  gilded                        Int
  mod_note                      String?
  mod_reason_by                 String?
  mod_reason_title              String?
  mod_reports                   String[]         @default([])
  no_follow                     Boolean          @default(false)
  num_reports                   Int              @default(0)
  permalink                     String
  replyIds                      String[]
  report_reasons                String[]
  subreddit                     Subreddit        @relation(fields: [subredditUrl], references: [url])
  subredditUrl                  String
  saved                         Boolean          @default(false)
  score                         Int              @default(0)
  send_replies                  Boolean          @default(false)
  stickied                      Boolean          @default(false)
  ups                           Int
  user_reports                  String[]
  commentId                     String?
  reddit_submission_id          Int
  RedditSubmission              RedditSubmission @relation(fields: [reddit_submission_id], references: [id])
  redditUserId                  String
}

model RedditUser {
  id                        String             @id()
  coins                     Int                @default(0)
  comment_karma             Int                @default(0)
  force_password_reset      Boolean            @default(false)
  gold_creddits             Int
  gold_expiration           DateTime
  has_android_subscription  Boolean            @default(false)
  has_external_account      Boolean            @default(false)
  has_ios_subscription      Boolean            @default(false)
  has_mail                  Boolean            @default(false)
  has_mod_mail              Boolean            @default(false)
  has_paypal_subscription   Boolean            @default(false)
  has_stripe_subscription   Boolean            @default(false)
  has_subscribed            Boolean            @default(false)
  has_subscribed_to_premium Boolean            @default(false)
  has_verified_mail         Boolean            @default(false)
  has_visited_new_profile   Boolean            @default(false)
  hide_from_robots          Boolean            @default(false)
  icon_img                  String
  in_beta                   Boolean            @default(false)
  in_chat                   Boolean            @default(false)
  in_redesign_beta          Boolean            @default(false)
  inbox_count               Int                @default(0)
  is_employee               Boolean            @default(false)
  is_friend                 Boolean            @default(false)
  is_gold                   Boolean            @default(false)
  is_mod                    Boolean            @default(false)
  is_sponsor                Boolean            @default(false)
  is_suspended              Boolean            @default(false)
  link_karma                Int
  RedditSubmission          RedditSubmission[]
  RedditComment             RedditComment[]
}

model Subreddit {
  url                         String                        @id() @unique()
  accounts_active_is_fuzzed   Boolean
  accounts_active             Int
  active_user_count           Int
  advertiser_category         String
  all_original_content        Boolean
  allow_discovery             Boolean
  allow_images                Boolean
  allow_videogifs             Boolean
  allow_videos                Boolean
  banner_background_color     String
  banner_background_image     String
  banner_img                  String
  banner_size                 Int[]
  can_assign_link_flair       Boolean
  can_assign_user_flair       Boolean
  collapse_deleted_comments   Boolean
  comment_score_hide_mins     Int
  community_icon              String
  created                     Int
  created_utc                 Int
  description                 String
  description_html            String
  display_name                String
  display_name_prefixed       String
  emojis_custom_size          Int[]
  emojis_enabled              Boolean
  has_menu_widget             Boolean
  header_img                  String
  header_size                 Int[]
  header_title                String
  hide_ads                    Boolean
  id                          String
  icon_img                    String
  icon_size                   Int[]
  is_enrolled_in_new_modmail  Boolean
  key_color                   String
  lang                        String
  link_flair_enabled          Boolean
  link_flair_position         String
  name                        String
  notification_level          String
  over18                      Boolean
  primary_color               String
  public_description          String
  public_description_html     String
  public_traffic              Boolean
  quarantine                  Boolean
  show_media                  Boolean
  show_media_preview          Boolean
  spoilers_enabled            Boolean
  submission_type             String
  submit_link_label           String
  submit_text                 String
  submit_text_html            String
  submit_text_label           String
  subreddit_type              String
  subscribers                 Int
  suggested_comment_sort      String
  title                       String
  user_can_flair_in_sr        Boolean
  user_flair_background_color String
  user_flair_css_class        String
  user_flair_enabled_in_sr    Boolean
  user_flair_position         String
  user_flair_template_id      String
  user_flair_text             String
  user_flair_text_color       String
  user_has_favorited          Boolean
  user_is_banned              Boolean
  user_is_contributor         Boolean
  user_is_moderator           Boolean
  user_is_muted               Boolean
  user_is_subscriber          Boolean
  user_sr_flair_enabled       Boolean
  user_sr_theme_enabled       Boolean
  whitelist_status            String
  wiki_enabled                Boolean
  wls                         Int
  Comment                     RedditComment[]
  ContentGenerationTask       RedditContentGenerationTask[]
}

model RedditSubmission {
  archived                    Boolean?
  author                      RedditUser      @relation(fields: [redditUserId], references: [id])
  id                          Int             @id @default(autoincrement())
  comments                    RedditComment[]
  clicked                     Boolean         @default(false)
  content_categories          String?
  contest_mode                Boolean         @default(false)
  domain                      String?
  hidden                      Boolean         @default(false)
  hide_score                  Boolean         @default(false)
  is_crosspostable            Boolean         @default(false)
  is_meta                     Boolean         @default(false)
  is_original_content         Boolean         @default(false)
  is_reddit_media_domain      Boolean         @default(false)
  is_robot_indexable          Boolean         @default(false)
  is_self                     Boolean         @default(false)
  is_video                    Boolean         @default(false)
  link_flair_background_color String?
  link_flair_css_class        String?
  link_flair_richtext         Json?
  link_flair_template_id      String?
  link_flair_text             String?
  link_flair_text_color       String?
  link_flair_type             String?
  locked                      Boolean         @default(false)
  media                       Json?
  media_embed                 Json?
  media_only                  Boolean         @default(false)
  num_comments                Int             @default(0)
  num_crossposts              Int             @default(0)
  over_18                     Boolean         @default(false)
  parent_whitelist_status     String?
  pinned                      Boolean         @default(false)
  previous_visits             Int[]
  post_hint                   String?
  preview                     Json?
  removal_reason              String?
  removed_by_category         String?
  selftext                    String?
  selftext_html               String?
  spam                        Boolean         @default(false)
  spoiler                     Boolean         @default(false)
  subreddit_subscribers       Int             @default(0)
  thumbnail                   String?
  thumbnail_height            Int?
  thumbnail_width             Int?
  title                       String
  upvote_ratio                Int             @default(0)
  url                         String
  view_count                  Int?            @default(0)
  visited                     Boolean         @default(false)
  whitelist_status            String?
  redditUserId                String
  ups                         Int             @default(0)
  downs                       Int             @default(0)
  score                       Int             @default(0)
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  timestamp DateTime @default(now()) @map("timestamp") @db.Timestamp(6)
  message   String
  uuid      String   @default("defaultUser")
  status    String

  @@index([uuid])
  @@map("audit_logs")
}

model RedditContentGenerationTask {
  id              Int               @id @default(autoincrement())
  status          RedditTaskStatus  @default(CREATED)
  submissionId    String            @unique
  subredditUrl    String
  startTime       DateTime          @default(now())
  endTime         DateTime?
  resources       RedditResources[]
  errorMessage    String?
  errorStackTrace String?
  subreddit       Subreddit?        @relation(fields: [subredditUrl], references: [url])
  program         String
  user            String            @default("defaultUser")
}

enum RedditTaskStatus {
  IN_PROGRESS
  SUCCESS
  ERROR
  CREATED
}

model RedditResources {
  id                    Int                           @id @default(autoincrement())
  videoUri              String?
  script                String?
  media                 RedditGenerationMedia[]
  ContentGenerationTask RedditContentGenerationTask[]
}

model RedditGenerationMedia {
  uri         Int               @id @default(autoincrement())
  type        String            @default("bytes")
  sizeBytes   Decimal           @default(-1)
  Resources   RedditResources[]
  resourcesId String?
}

model RedditVideo {
  id        Int                   @id @default(autoincrement())
  createdAt DateTime              @default(now())
  uri       String
  metadata  RedditVideoMetadata[] @relation
  videoId   String
}

model RedditVideoMetadata {
  id           Int          @id @default(autoincrement())
  duration     Int
  title        String
  description  String
  publishedAt  DateTime
  thumbnailUrl String
  metadataId   String
  Video        RedditVideo? @relation(fields: [videoId], references: [id])
  videoId      Int?
}

model TweetyTweet {
  id                    String        @id
  author                TwitterUser   @relation(fields: [authorId], references: [id])
  authorId              String
  card                  Json?
  comments              TweetyTweet[] @relation(name: "comments")
  created_on            String
  hashtags              String[]
  quoted_tweet          Json?
  is_possibly_sensitive Boolean
  is_quoted             Boolean
  is_reply              Boolean
  is_retweet            Boolean
  language              String
  likes                 Int
  media                 Json[]
  place                 Json
  quote_counts          Int
  reply_counts          Int
  reply_to              String?
  retweet_counts        Int
  source                String?
  symbols               Json[]
  text                  String
  threads               Json[]
  tweet_body            String?
  urls                  Json[]
  user_mentions         String[]
  vibe                  String?
  TweetyTweet           TweetyTweet?  @relation(name: "comments", fields: [tweetyTweetId], references: [id])
  tweetyTweetId         String?
}

model TwitterUser {
  id                        String        @id
  created_on                String?
  default_profile           Boolean?
  default_profile_image     Boolean?
  description               String
  fast_followers_count      Int
  favourites_count          Int?
  followers_count           Int
  friends_count             Int?
  has_custom_timelines      Boolean?
  is_translator             Boolean?
  listed_count              Int?
  location                  String?
  media_count               Int?
  name                      String
  normal_followers_count    Int
  possibly_sensitive        Boolean?
  profile_banner_url        String?
  profile_image_url_https   String?
  profile_interstitial_type String?
  profile_url               String?
  protected                 Boolean?
  rest_id                   String?
  screen_name               String
  statuses_count            Int?
  translator_type           String?
  username                  String
  verified                  Boolean
  verified_type             String?
  TweetyTweet               TweetyTweet[]
}
